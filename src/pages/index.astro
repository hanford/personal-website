---
import Layout from '../layouts/Layout.astro';
import Article from '../components/Article.astro';
import SocialModal from '../components/SocialModal.astro';
import Card from '../components/Card.astro';

const projects = [
  {
    path: "https://www.youtube.com/watch?v=JjRV-l9jSYE",
    name: "Rewriting Eaze.com with Next.js",
    isExternal: true,
    about:
      "On 4/28/18 I gave a ~15 minute talk at Zeit Day about my experience rewriting a large consumer facing website with Next.js",
  },
  {
    path: "https://trends.now.sh",
    name: "Trends ‚≠êÔ∏è",
    isExternal: true,
    about:
      "Ultra high performance github trending PWA built with Next.js and GraphQL but only ~15 lines of client side Javascript",
  },
  // {
  //   path: "/uberchrome",
  //   name: "Uberchrome",
  //   isExternal: true,
  //   about: "A chrome extension allowing you to order an uber from your desktop",
  // },
  // {
  //   path: "/instachrome",
  //   name: "Instachrome",
  //   isExternal: false,
  //   about:
  //     "A chrome extension for browsing instagram with around 11,000 active users",
  // },
  {
    path: "https://github.com/hanford/chirp",
    name: "Chirp üê¶",
    isExternal: true,
    about: "A desktop twitter application built for all platforms",
  },
  {
    path: "https://react-drag-drawer.now.sh",
    name: "React Drag Drawer",
    isExternal: true,
    about:
      "Mobile first ReactJS modal component with native touch gesture support",
  },
];
---

<Layout>
  <Card>
    <span class="emoji">üëã</span>

    <div class="intro">
      <div>
        <span style="font-weight: 600;">Jack Hanford</span>
      </div>

      <div class="about">
        Engineering leader at{" "}
        <a class="link" href="https://lattice.com" target="_blank">
          Lattice
        </a>
      </div>
    </div>

    <div class="row">
      <a href="/projects" style="text-decoration: none;">
        <button class="btn">Projects</button>
      </a>
      <button id="contactBtn" class="btn">Contact me</button>
    </div>

    <div class="title">Projects</div>

    {projects.map((p: any) => (
      <Article
        path={p.path}
        name={p.name}
        about={p.about}
        isExternal={p.isExternal}
      />
    ))}
  </Card>


  <dialog id="contactDialog">
    <div class="dialog-content">
      <SocialModal />
      <button id="closeBtn" class="close-btn" type="button">Close</button>
    </div>
  </dialog>

  <style>
    .emoji {
      font-size: 4rem;
      margin-bottom: 1rem;
      display: block;
    }

    dialog, dialog::backdrop {
      transition: display 1s allow-discrete, overlay 1s allow-discrete, opacity 0.1s, transform 0.2s;
      opacity: 0;
    }

    dialog[open] {
      opacity: 1;
      transform: scale(1);
    }

    @starting-style {
      dialog[open] {
        opacity: 0;
        transform: scale(0.95);
      }
    }

    dialog[open]::backdrop {
      opacity: 1;
    }
    

    @starting-style {
      dialog[open]::backdrop {
        opacity: 0;
      }
    }

    dialog {
      border: none;
      border-radius: 1rem;
      padding: 0;
      width: 50rem;
      max-width: 90%;
      margin: 10rem auto 0;
    }

    @media (max-width: 767px) {
      dialog {
        max-width: 100%;
        height: 100%;
      }
    }

    dialog::backdrop {
      background-color: rgba(0, 0, 0, 0.5);
    }

    .link {
      color: #d40052;
      font-weight: 600;
      text-decoration: none;
    }

    .intro {
      font-size: 2rem;
      line-height: 2rem;
      letter-spacing: 0.03em;
      margin: 1rem 0 2rem;
    }

    .intro > div:first-child {
      margin-bottom: 2rem;
    }

    .about {
      line-height: 2rem;
      font-size: 1.6rem;
    }

    .btn {
      display: block;
      line-height: 4rem;
      padding: 0 1.4rem;
      box-shadow: 0 0.4rem 0.6rem rgba(50, 50, 93, 0.1);
      border-radius: 0.4rem;
      font-size: 1.2rem;
      text-transform: uppercase;
      letter-spacing: 0.025em;
      text-decoration: none;
      border: 0px;
      cursor: pointer;
      outline: none;
      transition: all 0.25s ease-out;
      border: 2px solid #db594b;
      color: #db594b;
      font-weight: bold;
      font-family: Brandon;
      width: auto;
      min-width: 120px;
      background-color: transparent;
    }

    .row {
      display: flex;
      margin: 1rem auto;
      align-items: center;
      justify-content: space-between;
      width: 100%;
      gap: 1rem;

      a, .btn {
        width: 100%;
      }
    }

    .title {
      margin: 4rem -1rem 1rem;
      font-size: 2rem;
      line-height: 2rem;
      padding: 0 1rem;
      letter-spacing: 0.03em;
      font-weight: bold;
    }

    .dialog-content {
      background-color: white;
      padding: 2rem;
      border-radius: 1rem;
    }

    .close-btn {
      width: 100%;
      background-color: transparent;
      text-align: left;
      border: 0;
      font-family: Brandon;
      padding: 1rem;
      font-size: 1.5rem;
      border-radius: 1rem;
      cursor: pointer;
      color: black;

      &:hover {
        background-color: rgba(0, 0, 0, 0.1);
      }
    }

    @media (max-width: 767px) {
      .row {
        gap: 1rem;
      }

      .btn {
        width: 100%;
      }

      .btn:first-of-type {
        margin-right: 0;
      }
    }

    @media (prefers-color-scheme: dark) {
      .link {
        color: rgba(255, 255, 255, 0.9);
      }

      .btn {
        border: 2px solid rgba(255, 255, 255, 0.9);
        color: rgba(255, 255, 255, 0.9);
      }

      .dialog-content {
        background-color: #545454;
      }
    }
  </style>

  <script>
    const contactBtn = document.getElementById('contactBtn');
    const dialog = document.getElementById('contactDialog');
    const closeBtn = document.getElementById('closeBtn');

    if (contactBtn && dialog instanceof HTMLDialogElement && closeBtn) {
      contactBtn.addEventListener('click', () => {
        dialog.showModal();
      });

      closeBtn.addEventListener('click', () => {
        dialog.close();
      });

      dialog.addEventListener('click', (event) => {
        if (event.target === dialog) {
          dialog.close();
        }
      });
    }
  </script>
</Layout>
